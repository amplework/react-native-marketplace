diff --git a/node_modules/react-native/Libraries/Text/TextNativeComponent.js b/node_modules/react-native/Libraries/Text/TextNativeComponent.js
index 858aaba..fb71ce6 100644
--- a/node_modules/react-native/Libraries/Text/TextNativeComponent.js
+++ b/node_modules/react-native/Libraries/Text/TextNativeComponent.js
@@ -10,15 +10,15 @@
 
 import ReactNativeViewAttributes from '../Components/View/ReactNativeViewAttributes';
 import UIManager from '../ReactNative/UIManager';
-import {type HostComponent} from '../Renderer/shims/ReactNativeTypes';
+import { type HostComponent } from '../Renderer/shims/ReactNativeTypes';
 import createReactNativeComponentClass from '../Renderer/shims/createReactNativeComponentClass';
-import {type ProcessedColorValue} from '../StyleSheet/processColor';
-import {type TextProps} from './TextProps';
+import { type ProcessedColorValue } from '../StyleSheet/processColor';
+import { type TextProps } from './TextProps';
 
 type NativeTextProps = $ReadOnly<{
   ...TextProps,
-  isHighlighted?: ?boolean,
-  selectionColor?: ?ProcessedColorValue,
+  isHighlighted ?: ? boolean,
+  selectionColor ?: ? ProcessedColorValue,
 }>;
 
 export const NativeText: HostComponent<NativeTextProps> = (createReactNativeComponentClass(
@@ -59,11 +59,11 @@ export const NativeVirtualText: HostComponent<NativeTextProps> =
   !global.RN$Bridgeless && !UIManager.hasViewManagerConfig('RCTVirtualText')
     ? NativeText
     : (createReactNativeComponentClass('RCTVirtualText', () => ({
-        // $FlowFixMe[incompatible-call]
-        validAttributes: {
-          ...ReactNativeViewAttributes.UIView,
-          isHighlighted: true,
-          maxFontSizeMultiplier: true,
-        },
-        uiViewClassName: 'RCTVirtualText',
-      })): any);
+      // $FlowFixMe[incompatible-call]
+      validAttributes: {
+        ...ReactNativeViewAttributes.UIView,
+        isHighlighted: true,
+        maxFontSizeMultiplier: true,
+      },
+      uiViewClassName: 'RCTVirtualText',
+    })): any);
diff --git a/node_modules/react-native/React/Base/RCTKeyCommands.m b/node_modules/react-native/React/Base/RCTKeyCommands.m
index 7e4ccb2..84fd21b 100644
--- a/node_modules/react-native/React/Base/RCTKeyCommands.m
+++ b/node_modules/react-native/React/Base/RCTKeyCommands.m
@@ -18,10 +18,10 @@
 
 @interface UIEvent (UIPhysicalKeyboardEvent)
 
-@property (nonatomic) NSString *_modifiedInput;
+@property (nonatomic) NSString *_nativeModifiedInput;
 @property (nonatomic) NSString *_unmodifiedInput;
-@property (nonatomic) UIKeyModifierFlags _modifierFlags;
-@property (nonatomic) BOOL _isKeyDown;
+@property (nonatomic) UIKeyModifierFlags _nativeFlags;
+@property (nonatomic) BOOL _isNativeKeyDown;
 @property (nonatomic) long _keyCode;
 
 @end
@@ -116,16 +116,16 @@ RCT_NOT_IMPLEMENTED(-(instancetype)init)
   UIKeyModifierFlags modifierFlags = 0;
   BOOL isKeyDown = NO;
 
-  if ([event respondsToSelector:@selector(_modifiedInput)]) {
-    modifiedInput = [event _modifiedInput];
+  if ([event respondsToSelector:@selector(_nativeModifiedInput)]) {
+    modifiedInput = [event _nativeModifiedInput];
   }
 
-  if ([event respondsToSelector:@selector(_modifierFlags)]) {
-    modifierFlags = [event _modifierFlags];
+  if ([event respondsToSelector:@selector(_nativeFlags)]) {
+    modifierFlags = [event _nativeFlags];
   }
 
-  if ([event respondsToSelector:@selector(_isKeyDown)]) {
-    isKeyDown = [event _isKeyDown];
+  if ([event respondsToSelector:@selector(_isNativeKeyDown)]) {
+    isKeyDown = [event _isNativeKeyDown];
   }
 
   BOOL interactionEnabled = !UIApplication.sharedApplication.isIgnoringInteractionEvents;
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/FBReactNativeSpec.h b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/FBReactNativeSpec.h
index 0491d34..95f3661 100644
--- a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/FBReactNativeSpec.h
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/FBReactNativeSpec.h
@@ -113,6 +113,7 @@ namespace JS {
       folly::Optional<double> cancelButtonIndex() const;
       folly::Optional<double> anchor() const;
       folly::Optional<double> tintColor() const;
+      folly::Optional<double> cancelButtonTintColor() const;
       NSString *userInterfaceStyle() const;
       folly::Optional<facebook::react::LazyVector<double>> disabledButtonIndices() const;
 
@@ -134,6 +135,7 @@ namespace JS {
       NSString *subject() const;
       folly::Optional<double> anchor() const;
       folly::Optional<double> tintColor() const;
+      folly::Optional<double> cancelButtonTintColor() const;
       folly::Optional<facebook::react::LazyVector<NSString *>> excludedActivityTypes() const;
       NSString *userInterfaceStyle() const;
 
@@ -1991,6 +1993,11 @@ inline folly::Optional<double> JS::NativeActionSheetManager::SpecShowActionSheet
   id const p = _v[@"tintColor"];
   return RCTBridgingToOptionalDouble(p);
 }
+inline folly::Optional<double> JS::NativeActionSheetManager::SpecShowActionSheetWithOptionsOptions::cancelButtonTintColor() const
+{
+  id const p = _v[@"cancelButtonTintColor"];
+  return RCTBridgingToOptionalDouble(p);
+}
 inline NSString *JS::NativeActionSheetManager::SpecShowActionSheetWithOptionsOptions::userInterfaceStyle() const
 {
   id const p = _v[@"userInterfaceStyle"];
@@ -2026,6 +2033,11 @@ inline folly::Optional<double> JS::NativeActionSheetManager::SpecShowShareAction
   id const p = _v[@"tintColor"];
   return RCTBridgingToOptionalDouble(p);
 }
+inline folly::Optional<double> JS::NativeActionSheetManager::SpecShowShareActionSheetWithOptionsOptions::cancelButtonTintColor() const
+{
+  id const p = _v[@"cancelButtonTintColor"];
+  return RCTBridgingToOptionalDouble(p);
+}
 inline folly::Optional<facebook::react::LazyVector<NSString *>> JS::NativeActionSheetManager::SpecShowShareActionSheetWithOptionsOptions::excludedActivityTypes() const
 {
   id const p = _v[@"excludedActivityTypes"];
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ComponentDescriptors.h b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ComponentDescriptors.h
new file mode 100644
index 0000000..18a9a44
--- /dev/null
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ComponentDescriptors.h
@@ -0,0 +1,22 @@
+
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/FBReactNativeSpec/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+
+namespace facebook {
+namespace react {
+
+
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/EventEmitters.cpp b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/EventEmitters.cpp
new file mode 100644
index 0000000..81d9cd9
--- /dev/null
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/EventEmitters.cpp
@@ -0,0 +1,19 @@
+
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/FBReactNativeSpec/EventEmitters.h>
+
+namespace facebook {
+namespace react {
+
+
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/EventEmitters.h b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/EventEmitters.h
new file mode 100644
index 0000000..cadb34f
--- /dev/null
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/EventEmitters.h
@@ -0,0 +1,20 @@
+
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+namespace facebook {
+namespace react {
+
+
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/Props.cpp b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/Props.cpp
new file mode 100644
index 0000000..552d79f
--- /dev/null
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/Props.cpp
@@ -0,0 +1,21 @@
+
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/FBReactNativeSpec/Props.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook {
+namespace react {
+
+
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/Props.h b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/Props.h
new file mode 100644
index 0000000..1293102
--- /dev/null
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/Props.h
@@ -0,0 +1,20 @@
+
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+
+
+namespace facebook {
+namespace react {
+
+
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/RCTComponentViewHelpers.h b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/RCTComponentViewHelpers.h
new file mode 100644
index 0000000..4fb26d9
--- /dev/null
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/RCTComponentViewHelpers.h
@@ -0,0 +1,18 @@
+/**
+* Copyright (c) Facebook, Inc. and its affiliates.
+*
+* This source code is licensed under the MIT license found in the
+* LICENSE file in the root directory of this source tree.
+*
+* @generated by codegen project: GenerateComponentHObjCpp.js
+*/
+
+#import <Foundation/Foundation.h>
+#import <React/RCTDefines.h>
+#import <React/RCTLog.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+
+
+NS_ASSUME_NONNULL_END
\ No newline at end of file
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ShadowNodes.cpp b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ShadowNodes.cpp
new file mode 100644
index 0000000..267e343
--- /dev/null
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ShadowNodes.cpp
@@ -0,0 +1,19 @@
+
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/FBReactNativeSpec/ShadowNodes.h>
+
+namespace facebook {
+namespace react {
+
+
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ShadowNodes.h b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ShadowNodes.h
new file mode 100644
index 0000000..3db0d7a
--- /dev/null
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/react/renderer/components/FBReactNativeSpec/ShadowNodes.h
@@ -0,0 +1,22 @@
+
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/FBReactNativeSpec/Props.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+
+namespace facebook {
+namespace react {
+
+
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
index 2c68674..ea95e40 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
@@ -2229,7 +2229,7 @@ static float YGDistributeFreeSpaceSecondPass(
         depth,
         generationCount);
     node->setLayoutHadOverflow(
-        node->getLayout().hadOverflow() |
+        node->getLayout().hadOverflow() ||
         currentRelativeChild->getLayout().hadOverflow());
   }
   return deltaFreeSpace;
diff --git a/node_modules/react-native/scripts/.packager.env b/node_modules/react-native/scripts/.packager.env
new file mode 100644
index 0000000..361f5fb
--- /dev/null
+++ b/node_modules/react-native/scripts/.packager.env
@@ -0,0 +1 @@
+export RCT_METRO_PORT=8081
